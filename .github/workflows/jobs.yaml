name: Sample GitHub Pipeline

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - master

jobs:
  # Job 1: Run paths-filter to exclude changes in dir1 and dir2
  job1:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.filter.outputs.should_build }}  # Expose the filter result to other jobs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Apply paths-filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            build:
              - '!dir1/**'
              - '!dir2/**'
            

      - name: Show Filter Output
        run: echo "Should we build? ${{ steps.filter.outputs.should_build }}"

  # Job 2: Run only if job1 determines a build is needed
  job2:
    runs-on: ubuntu-latest
    needs: job1  # This job depends on job1
    if: needs.job1.outputs.should_build == 'true'  # Only run if should_build is true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Job 2 Task
        run: echo "Job 2 is running because files outside dir1 and dir2 were modified!"

  # Job 3: Run only if job1 determines a build is needed
  job3:
    runs-on: ubuntu-latest
    needs: job1  # This job depends on job1
    if: needs.job1.outputs.should_build == 'true'  # Only run if should_build is true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Job 3 Task
        run: echo "Job 3 is running because files outside dir1 and dir2 were modified
